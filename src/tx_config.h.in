#pragma once

#include <cstddef>

// tx parameters

// whether to emulate FaSST's protocol
#cmakedefine EM_FASST @EM_FASST@

// whether to only execute execution phase
#cmakedefine INLINE_OVERWRITE @INLINE_OVERWRITE@

// whether to only execute execution phase
#cmakedefine TX_ONLY_EXE @TX_ONLY_EXE@

// logging related configurations
#cmakedefine TX_USE_LOG @TX_USE_LOG@

/**
 * 1: use RPC as logging
 * 2: use one-sided WRITE as logging
 */
#cmakedefine TX_LOG_STYLE @TX_LOG_STYLE@

// whether to use a backup store
#cmakedefine TX_BACKUP_STORE @TX_BACKUP_STORE@


// Data store releated configurations
// whether offload read to one-sided operation
#cmakedefine ONE_SIDED_READ @ONE_SIDED_READ@

// whether to use cache for one-sided operations
#cmakedefine RDMA_CACHE @RDMA_CACHE@

#cmakedefine USE_RDMA_COMMIT @USE_RDMA_COMMIT@

#cmakedefine RDMA_STORE_SIZE @RDMA_STORE_SIZE@
#ifndef RDMA_STORE_SIZE
#define RDMA_STORE_SIZE 8
#endif

#define PA @PA@

// other TX specific configurations
#define RECORD_STALE @RECORD_STALE@

#define QP_NUMS 1

// execuation related configuration
#define NO_ABORT 1           // does not retry if the TX is abort, and do the execution
#define OCC_RETRY            // OCC does not issue another round of checks
#define OCC_RO_CHECK 1       // whether do ro validation of OCC

#define PROFILE_RW_SET 0     // whether profile TX's read/write set
#define PROFILE_SERVER_NUM 0 // whether profile number of server accessed per TX
